<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zwy.bill.dao.IBillDao">
  <resultMap type="com.zwy.bill.model.Bill" id="billResultMap" extends="BaseBusLongModel.model">
    <!-- 开始时间 -->
    <result property="startDate" column="C_START_DATE" />
    <!-- 结束时间 -->
    <result property="endDate" column="C_END_DATE" />
    <!-- 付费时间 -->
    <result property="payDate" column="C_PAY_DATE" />
    <!-- 停车用户ID -->
    <result property="memberId" column="C_MEMBER_ID" />
    <!-- 车牌号 -->
    <result property="carNo" column="C_CAR_NO" />
    <!-- 状态：0-未交费、1-已交费 -->
    <result property="status" column="C_STATUS" />
    <!-- 物业ID -->
    <result property="propertyId" column="C_PROPERTY_ID" />
    <!-- 小区ID -->
    <result property="communityId" column="C_COMMUNITY_ID" />
    <!-- 车位ID -->
    <result property="parkingSpaceId" column="C_PARKING_SPACE_ID" />
    <!-- 物业名称 -->
    <result property="propertyName" column="propertyName" />
    <!-- 小区名称 -->
    <result property="communityName" column="communityName" />
    <!-- 会员名称 -->
    <result property="memberName" column="memberName" />
    <!-- 车位编号 -->
    <result property="spaceNo" column="spaceNo" />

  </resultMap>

  <sql id="allColumnSql">
    o.ID,
    o.C_START_DATE,
    o.C_END_DATE,
    o.C_PAY_DATE,
    o.C_MEMBER_ID,
    o.C_CAR_NO,
    o.C_STATUS,
    o.C_PROPERTY_ID,
    o.C_COMMUNITY_ID,
    o.C_PARKING_SPACE_ID,
    p.C_NAME AS propertyName,
    c.C_NAME AS communityName,
    m.C_NAME AS memberName,
    ps.C_NO AS spaceNo
  </sql>

  <sql id="searchConditionSql">
	  <if test="item.carNo != null and item.carNo != ''">
        AND o.C_CAR_NO like CONCAT('%',#{item.carNo},'%')
	  </if>
  </sql>

  <sql id="tableAndLeftJoin">
    FROM bill o
    LEFT JOIN member m ON m.ID = o.C_MEMBER_ID
    LEFT JOIN property p ON p.ID = o.C_PROPERTY_ID
    LEFT JOIN community c ON c.ID = o.C_COMMUNITY_ID
    LEFT JOIN parking_space ps ON ps.ID = o.C_PARKING_SPACE_ID
  </sql>

  <select id="listBillAll" resultMap="billResultMap">
    SELECT <include refid="allColumnSql"/>
    <include refid="tableAndLeftJoin"/>
    <where>
      <if test="user.roleName != '平台管理员'">
        o.C_ROLE_ID = ${user.roleId}
      </if>
    </where>
  </select>

  <select id="getBillById" resultMap="billResultMap">
    SELECT <include refid="allColumnSql"/>
    <include refid="tableAndLeftJoin"/>
    WHERE o.ID = #{id}
  </select>

  <select id="listBillByPage" resultMap="billResultMap">
    SELECT <include refid="allColumnSql"/>
    <include refid="tableAndLeftJoin"/>
    WHERE 1=1 <include refid="searchConditionSql"/>
    <if test="user.roleName != '平台管理员'">
      AND o.C_PROPERTY_ID = ${user.propertyId}
    </if>
  </select>

  <insert id="add" parameterType="com.zwy.bill.model.Bill" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
    INSERT INTO bill
    (
    C_START_DATE,
    C_END_DATE,
    C_PAY_DATE,
    C_MEMBER_ID,
    C_CAR_NO,
    C_STATUS,
    C_PROPERTY_ID,
    C_COMMUNITY_ID,
    C_PARKING_SPACE_ID
    )
    VALUES
    (
     #{startDate},
     #{endDate},
     #{payDate},
     #{memberId},
     #{carNo},
     #{status},
     #{propertyId},
     #{communityId},
     #{parkingSpaceId}
    )
  </insert>

  <update id="update" parameterType="com.zwy.bill.model.Bill">
    UPDATE bill SET
    C_START_DATE = #{startDate},
    C_END_DATE = #{endDate},
    C_PAY_DATE = #{payDate},
    C_MEMBER_ID = #{memberId},
    C_CAR_NO = #{carNo},
    C_STATUS = #{status},
    C_PROPERTY_ID = #{propertyId},
    C_COMMUNITY_ID = #{communityId},
    C_PARKING_SPACE_ID = #{parkingSpaceId}
    WHERE ID = #{id}
  </update>

  <update id="closeBillByIds">
    UPDATE bill set C_END_DATE = sysdate()
    WHERE ID IN
    <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <update id="payBillByIds">
    UPDATE bill set
    C_PAY_DATE = sysdate(),
    C_STATUS = 1
    WHERE ID IN
    <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <delete id="delByIds">
    DELETE FROM bill
    WHERE ID IN
    <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
</mapper>